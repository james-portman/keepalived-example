---
# - name: "Set up secondary nic in virtualbox"
#   hosts: all
#   become: true
#   become_method: sudo
#   handlers:
#     - name: "Restart networking"
#       service:
#         name: networking
#         state: restarted
#   tasks:
#     - name: "Template nic file"
#       template:
#         src: nic.j2
#         dest: "/etc/network/interfaces.d/{{ nic.name }}.cfg"
#       with_items: "{{ create_nics }}"
#       loop_control:
#         loop_var: nic
#       notify: "Restart networking"
#     - meta: flush_handlers


- name: "Set up keepalived"
  hosts: all
  gather_facts: yes
  become: true
  become_method: sudo
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
  pre_tasks:
    # - name: Ensure the vrrp nics are up
    #   shell: ip link set dev {{ vrrp_nic }} up || true
    #   changed_when: false
    - name: Display the configuration
      debug:
        var: keepalived_instances
    # - name: "Disable starting keepalived as soon as it installs"
    #   command: ln -s /dev/null /etc/systemd/system/keepalived.service
  roles:
    - ansible-keepalived
  # tasks:
  #   - name: "Ensure keepalived is started - bug seems to need it starting twice on install"
  #     service:
  #       name: keepalived
  #       state: started

#- name: Check if first node is master
#  hosts: boxone
#  gather_facts: yes
#  become: true
#  become_method: sudo
#  tasks:
#    - assert:
#        that:
#          - "'ipv4_secondaries' in ansible_eth1"
#          - "ansible_eth1['ipv4_secondaries'][0]['address'] == '192.168.33.2'"
#
#- name: Check if failover works
#  hosts: all
#  gather_facts: yes
#  become: true
#  become_method: sudo
#  tasks:
#    - shell: ifconfig {{ vrrp_nic }} down || true
#      changed_when: false
#      when: inventory_hostname != ansible_play_hosts[2]
#    - name: The VRRP state needs to adapt the topo change
#      wait_for:
#        timeout: 12
#    - setup:
#        gather_subset: network
#    - debug:
#        var: ansible_all_ipv4_addresses
#    - assert:
#        that:
#          - "'192.168.33.2' in ansible_all_ipv4_addresses"
#      when: inventory_hostname == ansible_play_hosts[2]
#    #- shell: ifconfig {{ vrrp_nic }} up || true
#    #  changed_when: false
